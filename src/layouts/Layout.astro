---
import "../styles/global.css";
import animationsCssUrl from "../styles/animations.css?url";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";

export interface Props {
  title?: string;
  description?: string;
  image?: string;
}

const { 
  title = "Tecnomata | SEO Local y Páginas Web",
  description = "Agencia SEO en Morelos. Posicionamos negocios locales en Google Maps y creamos páginas web que venden. SEO local, diseño web y reputación online.",
  image = "/favicon.svg"
} = Astro.props;
---

<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="author" content="Tecnómata" />
    <meta name="robots" content="index, follow" />
    
    <!-- Activar la clase 'js' en <html> lo antes posible para evitar parpadeos -->
    <script is:inline>
      document.documentElement.classList.add('js');
    </script>
    <!-- Inyectar override temporal para que NADA se oculte antes de inicializar animaciones -->
    <script is:inline>
      (function(){
        try {
          var s = document.createElement('style');
          s.id = 'pre-js-style';
          s.textContent = '.scroll-animate, .animate-fade-in-up, .animate-slide-in-left, .animate-slide-in-right, .animate-scale-in, .animate-bounce-in{opacity:1!important;transform:none!important;animation:none!important}';
          document.head.appendChild(s);
        } catch(e){}
      })();
    </script>
  
    <!-- Preconnect for performance -->
    <link rel="preconnect" href="https://tecnomata.com" />
    <link rel="dns-prefetch" href="https://tecnomata.com" />
    
  <!-- Nota: evitamos preloads de fuentes variables para no generar warnings si el uso se difiere; usamos font-display: swap en @font-face -->
    
    <!-- Critical inline CSS for fonts (evita FOUT) -->
    <style>
      @font-face {
        font-family: 'Inter';
        font-style: normal;
        font-weight: 100 900;
        font-display: optional;
        src: url('/fonts/Inter/Inter-VariableFont_opsz,wght.ttf') format('truetype');
      }
      @font-face {
        font-family: 'DM Sans';
        font-style: normal;
        font-weight: 100 1000;
        font-display: optional;
        src: url('/fonts/DM_Sans/DMSans-VariableFont_opsz,wght.ttf') format('truetype');
      }
      
      /* Critical CSS for Hero H1 - MUST load instantly */
      body { 
        margin: 0; 
        background: #fff;
        font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        /* Evitar shifts por mobile menu */
        overflow-x: hidden;
      }
      .bg-white { background-color: #ffffff; }
      .text-center { text-align: center; }
      .font-black { font-weight: 900; }
      .text-gray-900 { color: #111827; }
      .leading-tight { line-height: 1.25; }
      .tracking-tighter { letter-spacing: -0.05em; }
      .text-primary { color: #2563eb; }
      .mx-auto { margin-left: auto; margin-right: auto; }
      .max-w-7xl { max-width: 80rem; }
      .px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
      .py-24 { padding-top: 6rem; padding-bottom: 6rem; }
      .mt-6 { margin-top: 1.5rem; }
      .max-w-3xl { max-width: 48rem; }
      .text-lg { font-size: 1.125rem; line-height: 1.75rem; }
      .text-gray-600 { color: #4b5563; }
      @media (min-width: 768px) {
        .md\:text-7xl { font-size: 4.5rem; line-height: 1; }
        .md\:text-xl { font-size: 1.25rem; line-height: 1.75rem; }
      }
      @media (min-width: 1024px) {
        .lg\:text-8xl { font-size: 6rem; line-height: 1; }
        .lg\:py-32 { padding-top: 8rem; padding-bottom: 8rem; }
      }
    </style>
    
    <!-- Mientras no exista la clase .js en <html>, nunca ocultar secciones -->
    <style id="pre-js-visibility">
      html:not(.js) .scroll-animate,
      html:not(.js) .animate-fade-in-up,
      html:not(.js) .animate-slide-in-left,
      html:not(.js) .animate-slide-in-right,
      html:not(.js) .animate-scale-in,
      html:not(.js) .animate-bounce-in {
        opacity: 1 !important;
        transform: none !important;
        animation: none !important;
      }
    </style>
    
  <!-- Load animations CSS inline blocking (evita FOUC y CLS) -->
  <link rel="stylesheet" href={animationsCssUrl} />
  
  <!-- Site Favicon -->
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <link rel="shortcut icon" type="image/svg+xml" href="/favicon.svg" />
  <!-- Multiple sizes for better compatibility -->
  <link rel="apple-touch-icon" href="/favicon.svg" />
    
    <!-- Open Graph -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://tecnomata.com/" />
    <meta property="og:image" content={image} />
    
    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={image} />
    
    <!-- Local fonts loaded via CSS imports -->
    
    <!-- Sistema centralizado de colores ya integrado en global.css -->
    
    <!-- Si no hay JS, aseguramos que el contenido no quede oculto -->
    <noscript>
      <style>
        .scroll-animate { opacity: 1 !important; transform: none !important; animation: none !important; }
      </style>
    </noscript>
  </head>
  <body class="bg-white text-gray-900">
    <Navbar />
    <slot />
    <Footer />
    
    <!-- Sistema de animaciones inline MINIFICADO (NO TOCAR - TBT<300ms crítico) -->
    <script is:inline>
class V{constructor(){this.r=0;this.init()}init(){if(typeof window==='undefined')return;const p=window.matchMedia&&window.matchMedia('(prefers-reduced-motion: reduce)').matches;const m=(window.matchMedia&&window.matchMedia('(max-width: 768px)').matches)||window.innerWidth<769;this.r=!!(p||m);const i=()=>{this.s();this.setupScrollBars();if(!this.r){this.c();this.p()}setTimeout(()=>{const e=document.getElementById('pre-js-style');if(e&&e.parentNode)e.parentNode.removeChild(e)},400)};const d=()=>{if(document.readyState==='loading'){document.addEventListener('DOMContentLoaded',i,{once:true})}else{i()}};if('requestIdleCallback' in window){window.requestIdleCallback(()=>d(),{timeout:800})}else{setTimeout(d,120)}}s(){if(this.r){document.querySelectorAll('.scroll-animate, [data-animate]').forEach((e)=>{e.classList.add('in-view')});return}const o=new IntersectionObserver((en)=>{en.forEach(e=>{const el=e.target;const on=el.dataset.once==='true';if(e.isIntersecting){el.classList.add('in-view');const a=el.dataset.animate;if(a){const m={'fade-up':'animate-fade-in-up','slide-left':'animate-slide-in-left','slide-right':'animate-slide-in-right','scale-in':'animate-scale-in','bounce-in':'animate-bounce-in'};const c=m[a]||'animate-fade-in-up';const d=el.dataset.delay;if(d){setTimeout(()=>{el.classList.add(c)},parseInt(d,10))}else{el.classList.add(c)}}if(el.classList.contains('counter')){this.ac(el)}if(on)o.unobserve(el)}else if(!on&&e.boundingClientRect.top>0){const a=el.dataset.animate;if(a){const m={'fade-up':'animate-fade-in-up','slide-left':'animate-slide-in-left','slide-right':'animate-slide-in-right','scale-in':'animate-scale-in','bounce-in':'animate-bounce-in'};el.classList.remove(m[a]||'animate-fade-in-up')}el.classList.remove('in-view')}})},{threshold:0.1,rootMargin:'50px 0px'});document.querySelectorAll('.scroll-animate, [data-animate]').forEach(e=>{if(!e.classList.contains('scroll-animate'))e.classList.add('scroll-animate');o.observe(e)});document.querySelectorAll('.counter').forEach(c=>{o.observe(c)})}ac(e){if(e.dataset.animated==='true')return;e.dataset.animated='true';const t=parseInt(e.dataset.target||'0');const s=e.dataset.suffix||'';const p=e.dataset.prefix||'';const d=parseInt(e.dataset.duration||'2000');if(t===0)return;const st=performance.now();const a=(c)=>{const el=c-st;const pr=Math.min(el/d,1);const ea=1-Math.pow(1-pr,4);const cu=Math.floor(t*ea);e.textContent=p+cu+s;if(pr<1){requestAnimationFrame(a)}else{e.textContent=p+t+s}};requestAnimationFrame(a)}c(){setTimeout(()=>{const cs=document.querySelectorAll('.counter:not([data-animated="true"])');if(cs.length===0)return;const vh=window.innerHeight;cs.forEach(c=>{const r=c.getBoundingClientRect();if(r.top<vh&&r.bottom>0){this.ac(c)}})},1000)}p(){const hs=document.querySelectorAll('.parallax-hero');if(hs.length===0)return;window.addEventListener('scroll',()=>{const s=window.pageYOffset;hs.forEach(h=>{if(s<window.innerHeight){h.style.transform=`translateY(${s*0.5}px)`}})})}setupScrollBars(){const bars=document.querySelectorAll('[data-scroll-bar]');if(bars.length===0)return;const rDirs=['left-right','right-left','center'];bars.forEach((b)=>{if(!b.dataset.scrollDirection||b.dataset.scrollDirection==='random'){b.dataset.scrollDirection=rDirs[Math.floor(Math.random()*rDirs.length)];b.dataset.scrollOffset=Math.random()*0.15}});const update=()=>{const wh=window.innerHeight;const fStart=wh*0.8;const fEnd=wh*0.3;const tDist=fStart-fEnd;const bData=Array.from(bars).map(cont=>{const r=cont.getBoundingClientRect();const eTop=r.top;let prog;if(eTop>=fStart){prog=0}else if(eTop<=fEnd){prog=1}else{prog=(fStart-eTop)/tDist}return{cont,prog,dir:cont.dataset.scrollDirection||'left-right',cb:cont.querySelector('.scroll-color-fill')}});bData.forEach(({cont,prog,dir,cb})=>{if(!cb)return;switch(dir){case 'left-right':cb.style.width=`${prog*100}%`;cb.style.transformOrigin='left';cb.style.transform='scaleX(1)';break;case 'right-left':cb.style.width=`${prog*100}%`;cb.style.transformOrigin='right';cb.style.transform='scaleX(1)';cb.style.marginLeft=`${(1-prog)*100}%`;break;case 'center':cb.style.width=`${prog*100}%`;cb.style.transformOrigin='center';cb.style.transform='scaleX(1)';cb.style.marginLeft=`${((1-prog)/2)*100}%`;break;default:cb.style.width=`${prog*100}%`}cb.style.transition='all 0.2s ease-out'})};let tick=false;const hScroll=()=>{if(!tick){requestAnimationFrame(()=>{update();tick=false});tick=true}};window.addEventListener('scroll',hScroll,{passive:true});update()}}const v=new V();window.V=V;
    </script>
  </body>
</html>
